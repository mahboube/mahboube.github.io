---
layout: post
title: تنظیم وپیکربندی گیت
date:   2016-04-05 06:00:30 +0430
categories: jekyll update
---
تنظیم و پیکربندی git

پس از نصب گیت، باید برخی تنظیمات اولیه را تنها برای یک مرتبه انجام داد. تنظیم و پیکربندی گیت با استفاده از دستور config امکان پذیر است. git config به شما اجازه می دهد که تنظیمات اعمال شده را مشاهده کرده و یا آنها را تعریف کنید. تنظیماتی که نحوه عملکرد و نمایش گیت را کنترل می کنند. این تنظیمات می توانند در سه مکان متفاوت ذخیره شوند:

    تنظیمات سیستمی که در “پوشه‌ی محل نصب گیت” در مسیر etc/gitconfig ذخیره می شوند. این تنظیمات برای تمام کاربران آن سیستم و همه‌ی Repository های آنها یکسان می باشد. با استفاده از گزینه‌ی --system بعد از دستور git config می‌توان این تنظیمات را مشاهده نموده و یا تغییر داد.
    تنظیمات عمومی کاربری که به یک اکانت کاربر مشخص در سیستم تعلق دارند. این تنظیمات در فایلی به نام .gitconfig ذخیره می شوند؛ این فایل در پوشه‌ی مربوط به هر اکانت کاربری قرار دارد [در سیستم‌های عامل مک و شبه‌یونیکس، در مسیر ~/.gitconfig و در سیستم عامل ویندوز در مسیر C:\Documents and Settings\$USER و یا C:\Users\$USER ]. با استفاده از گزینه‌ی --global بعد از دستور git config می‌توان این تنظیمات را مشاهده نموده و یا تغییر داد. این تنظیمات به طور پیشفرض برای تمام پروژه‌ها یا Repository های آن کاربر استفاده می شود.
    تنظیمات اختصاصی Repository که مربوط به یک Repo یا پروژه‌ی مشخص بوده و در پوشه‌ی آن پروژه، در مسیر .git/config ذخیره می شوند. تنظیمات اعمال شده در این قسمت نسبت به تنظیمات عمومی، در اولویت قرار می گیرد. به عبارتی اگر یک پارامتر در این دو قسمت با مقادیر متفاوت ذخیره شده باشد، هنگام کار با آن Repository، تنظیمات اعمال شده در آن بر تنظیمات عمومی برتری خواهد داشت. برای ایجاد این تنظیمات در یک Repository مشخص، کافی است به محل ذخیره آن Repo رفته و از دستور git config بدون --global استفاده نمایید.

برای وارد نمودن دستورات گیت – پس از نصب آن – می توان در لینوکس و مک از Terminal، و در ویندوز از برنامه Git Bash (که پس از نصب برنامه، از منوی Start قابل دسترس است) استفاده نمود.
تعیین مشخصات کاربری

هر commit که شما انجام می دهید، حاوی “نام” و “ایمیل” مالک آن است. برای آنکه گیت بتواند مالک هر commit را شناسایی کند، باید نام و آدرس ایمیل خود را در تنظیمات عمومی (و یا تنها همان Repo مورد نظرتان) درج کنید. برای ثبت این مشخصات در تنظیمات عمومی به صورت زیر عمل کنید:
1
2
	
git config --global user.name "Your Name"
git config --global user.email "your@email.com"

رنگ‌آمیزی نوشته‌ها در کنسول

به منظور آسان‌تر خواندن نوشته‌ها در کنسول (Terminal یا Bash) می توان از دستورات زیر برای رنگ‌آمیزی آن‌ها استفاده نمود:
1
2
3
4
	
git config --global color.ui auto
git config --global color.diff auto
git config --global color.status auto
git config --global color.branch auto

مشاهده تنظیمات

    اگر می خواهید تمامی تنظیمات گیت “سیستمی + عمومی” را مشاهده کنید، می توانید (ترجیحا خارج از پوشه‌ی یک پروژه یا Repository) با استفاده از دستور git config --list پارامترهای ثبت شده را لیست کنید.
    اگر داخل پوشه‌ پروژه یا Repository خود، این دستور را فراخوانی کنید، درصورتی که برای آن پروژه تنظیماتی تعریف کرده باشید، آن تنظیمات جایگزین تنظیمات عمومی کاربر خواهد شد و دستور git config --list تنظیمات “سیستمی + اختصاصی پروژه” را نمایش خواهد داد.
    برای آنکه تنها تنظیمات سیستمی را مشاهده نمایید، عبارت --system و برای مشاهده تنظیمات عمومی عبارت --global را به انتهای دستور فوق اضافه نمایید.

تکمیل خودکار در git

این بخش کاملا اختیاری است، شما می توانید بدون دنبال کردن ادامه‌ی این مقاله به درستی با گیت کار کنید؛ اما اگر حس کنجکاوی این اجازه را به شما نمی‌دهد، پس بیایید ادامه دهیم :-) “تکمیل خودکار” یا “Auto-Completion” یک ویژگی و ابزار بسیار مفید برای ساده‌سازی کار با گیت است. این ویژگی در نسخه‌ی گیت تهیه شده برای سیستم عامل ویندوز، ضمیمه شده و نیازی به نصب آن نیست؛ اما در سیستم‌های مک و شبه‌یونیکس ابتدا باید این ابزار را به گیت اضافه نمود. برای این‌کار مراحل زیر را در Terminal انجام می‌دهیم:

    به پوشه home کاربر رفته.
    با استفاده از curl برنامه‌ی git-completion.bash را از github دانلود می کنیم.
    سپس آن را rename کرده و یک نقطه به ابتدای نام آن اضافه می کنیم.

1
2
3
4
5
6
7
8
	
cd ~
# Go to user home directory
 
curl -OL https://github.com/git/git/raw/master/contrib/completion/git-completion.bash
# Download "git-completion.bash" file from github
 
mv ~/git-completion.bash ~/.git-completion.bash
# Rename downloaded file

تنها کاری که باقی مانده، آن است که .git-completion.bash را به صورت پیش‌فرض فراخوانی کنیم. برای اینکار، در پوشه home کاربر رفته و فایل  .bash_profile را با یک ویرایشگر متن باز کنید. (اگر در لینوکس محیط گرافیکی ندارید از برنامه GNU nano استفاده کنید nano ~/.bash_profile) سپس کد زیر را در آن وارد کرده و فایل را ذخیره نمایید:
1
2
3
	
if [ -f ~/.git-completion.bash ]; then
    source ~/.git-completion.bash
fi

پس از ذخیره فایل، Terminal را بسته و مجدد باز کنید، فایل .git-completion.bash به صورت پیش‌فرض فراخوانی شده است. اکنون زمان آن است که از کار با آن لذت ببریم :-) به عنوان مثال در کنسول، عبارت git h را وارد نموده و کلید Tab را فشار دهید، مشاهده می کنید که برنامه دستور شما را به صورت git help کامل می‌کند! می توان از این روش در کامل کردن نام فایل‌ها، مسیرها و… استفاده کرد، و این چیزی است که به روند انجام کار سرعت می‌بخشد.
